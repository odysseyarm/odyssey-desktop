syntax = "proto3";

package odyssey.service_interface;

service Service {
  rpc GetDeviceList (DeviceListRequest) returns (DeviceListReply) {}
  rpc Poll (PollRequest) returns (stream PollReply) {}
}

message UdpDevice {
  int32 id = 1;
  string ip = 2;
  int32 port = 3;
  uint64 uuid = 4;
}

message HidDevice {
  string path = 1;
  uint64 uuid = 2;
}

message CdcDevice {
  string path = 1;
  uint64 uuid = 2;
}

message Device {
  oneof device_oneof {
    UdpDevice udpDevice = 1;
    HidDevice hidDevice = 2;
    CdcDevice cdcDevice = 3;
  }
}

message Matrix3x3 {
  double m11 = 1;
  double m12 = 2;
  double m13 = 3;
  double m21 = 4;
  double m22 = 5;
  double m23 = 6;
  double m31 = 7;
  double m32 = 8;
  double m33 = 9;
}

message Matrix3x1 {
  double m11 = 1;
  double m21 = 2;
  double m31 = 3;
}

message Vector2 {
  double x = 1;
  double y = 2;
}

message Vector3 {
  double x = 1;
  double y = 2;
  double z = 3;
}

message Pose {
  Matrix3x3 rotation = 1;
  Matrix3x1 translation = 2;
}

message DeviceEvent {
  Device device = 1;
  message AccelerometerEvent {
    uint32 timestamp = 1;
    Vector3 acceleration = 2;
    Vector3 angular_velocity = 3;
    Vector3 euler_angles = 4;
  }
  message TrackingEvent {
    uint32 timestamp = 1;
    Vector2 aimpoint = 2;
    optional Pose pose = 3;
    uint32 screen_id = 4;
  }
  message ImpactEvent {
    uint32 timestamp = 1;
  }
  message ConnectEvent {}
  message DisconnectEvent {}
  oneof device_event_oneof {
    AccelerometerEvent accelerometer = 2;
    TrackingEvent tracking = 3;
    ImpactEvent impact = 4;
    ConnectEvent connect = 5;
    DisconnectEvent disconnect = 6;
  }
}

message Event {
  oneof event_oneof {
    DeviceEvent device = 1;
  }
}

message DeviceListRequest {}

message DeviceListReply {
  repeated Device device_list = 1;
}

message PollRequest {}

message PollReply {
  Event event = 1;
}
